apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: app-deployment-template
parameters:
  - name: APP_NAME
    required: true
  - name: APP_FULL_VERSION
    required: true
  - name: GIT_COMMIT_ID
    required: true
  - name: JENKINS_BUILD_NUMBER
    required: true
  - name: CONFIG_DATA
    required: true
  - name: PROJECT_NAME
    required: true
objects:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: ${APP_NAME}
      namespace: ${PROJECT_NAME}
      labels:
        provider: s2i
        appname: "${APP_NAME}"
        appversion: "${APP_FULL_VERSION}"
        gitcommitid: ${GIT_COMMIT_ID}
        buildnumber: ${JENKINS_BUILD_NUMBER}
    spec:
      replicas: 1
      selector:
        matchLabels:
          appname: ${APP_NAME}
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: 25%
          maxSurge: 25%
      template:
        metadata:
          labels:
            appname: ${APP_NAME}
        spec:
          containers:
            - name: ${APP_NAME}
              image: "image-registry.openshift-image-registry.svc:5000/${PROJECT_NAME}/${APP_NAME}:${APP_FULL_VERSION}"
              ports:
                - containerPort: 8080
              envFrom:
                - configMapRef:
                    name: ${APP_NAME}-config
              resources:
                requests:
                  memory: "128Mi"
                  cpu: "250m"
                limits:
                  memory: "512Mi"
                  cpu: "500m"
              imagePullPolicy: Always
          restartPolicy: Always

  - apiVersion: v1
    kind: Service
    metadata:
      name: ${APP_NAME}
      labels:
        provider: s2i
        appname: "${APP_NAME}"
        appversion: "${APP_FULL_VERSION}"
        gitcommitid: ${GIT_COMMIT_ID}
        buildnumber: ${JENKINS_BUILD_NUMBER}
    spec:
      selector:
        appname: ${APP_NAME}
      ports:
        - name: "${APP_NAME}-http"
          port: 80
          targetPort: 8080
      type: ClusterIP
